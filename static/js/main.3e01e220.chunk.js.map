{"version":3,"sources":["components/NumberOfPlayers/NumberOfPlayers.js","data/action.js","components/NumberOfPlayers/index.js","components/RandomTeamsBtn/RandomTeamsBtn.js","components/RandomTeamsBtn/index.js","components/PlayerForm/FormField.js","components/PlayerForm/PlayerForm.js","components/PlayerForm/index.js","components/PlayersList/PlayersList.js","components/PlayersList/index.js","components/Teams/Team.js","components/Teams/Team1.js","components/Teams/Team2.js","components/SortSkillBtn/SortSkillBtn.js","components/SortSkillBtn/index.js","components/Main/Main.js","components/Main/index.js","components/ResetBtn/ResetBtn.js","components/ResetBtn/index.js","components/AboutPageBtn/AboutPageBtn.js","components/AboutPageBtn/index.js","components/Headers/PlayerHeader.js","components/AboutPage/AboutPage.js","components/App/App.js","components/App/index.js","data/initial.js","data/reducer/createRandomTeams.js","data/reducer/addPlayer.js","data/reducer/addTeamNames.js","data/reducer/changeNumberOfPlayers.js","data/reducer/checkPlayerNumbers.js","data/reducer/createSkillTeams.js","data/reducer/deletePlayer.js","data/reducer/showAboutPage.js","data/reducer/reducer.js","data/store.js","index.js"],"names":["NumberOfPlayers","numberOfPlayers","handleDecrement","handleIncrement","min","max","tooManyPlayers","className","onClick","disabled","changeNumberOfPlayers","value","type","connect","dispatch","RandomTeamsBtn","handleCreateTeams","FormField","name","label","containerClass","handleChange","onChange","required","PlayerForm","props","handleName","e","setState","playerName","currentTarget","handleTeamName1","teamName1","handleTeamName2","teamName2","handleSkill","playerSkill","handleSubmit","preventDefault","state","bind","this","onSubmit","checked","Component","data","addPlayer","addTeamNames","PlayersList","players","handleClick","divRef","useRef","useEffect","current","scrollIntoView","behavior","map","player","index","skill","ref","deletePlayer","TeamList","playersTeam","teamName","playersTeam1","Team","playersTeam2","SkillTeamsBtn","handleSkillTeams","Main","teamGenerated","Team1","Team2","ResetBtn","AboutPageBtn","PlayerHeader","AboutPage","App","aboutPage","initial","createTeams","newArr","playersArray","sort","Math","random","shuffle","team1","slice","length","team2","checkPlayerNumbers","createSkillTeams","sortedPlayerArray","filter","splitPlayers","a","b","action","playerToBeDeleted","showAboutPage","reducer","createRandomTeams","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","persistState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e01e220.chunk.js","sourcesContent":["import React from 'react';\n\nconst NumberOfPlayers = ({ numberOfPlayers, handleDecrement, handleIncrement, min, max, tooManyPlayers }) => {\n\n    return (\n        <div className=\"number-of-players-wrapper\">\n\n            <p>\n                How many players? {numberOfPlayers}\n            </p>\n\n            <button\n                onClick={handleDecrement}\n                className=\"player-remove-btn\"\n                disabled={ numberOfPlayers === min || tooManyPlayers ? true : false }\n            >-</button>\n\n            <button\n                onClick={handleIncrement}\n                className=\"player-add-btn\"\n                disabled={ numberOfPlayers === max || tooManyPlayers ? true : false}\n            >+</button>\n\n        </div>\n    );\n\n};\n\nexport default NumberOfPlayers;","//use of action creator, this function creates the ADD_PLAYER action\nexport const addPlayer = data => {\n\n    return {\n        type: \"ADD_PLAYER\",\n        data,\n    };\n\n};\n\nexport const deletePlayer = data => {\n    return {\n        type: \"DELETE_PLAYER\",\n        index: data,\n    }\n};\n\nexport const addTeamNames = data => {\n\n    return {\n        type: \"ADD_TEAM_NAMES\",\n        data,\n    };\n\n};\n\nexport const changeNumberOfPlayers = value => {\n\n    return {\n        type: \"CHANGE_NO_OF_PLAYERS\",\n        value,\n    };\n\n};\n\nexport const createRandomTeams = () => {\n\n    return {\n        type: \"CREATE_RANDOM_TEAMS\",\n    };\n\n};\n\nexport const createSkillTeams = () => {\n\n    return {\n        type: \"CREATE_SKILL_TEAMS\",\n    };\n\n};\n\nexport const showAboutPage = () => {\n\n    return {\n        type: \"SHOW_ABOUT_PAGE\",\n    };\n\n};\n\nexport const reset = () => {\n\n    return {\n        type: \"RESET\",\n    };\n\n};","import { connect } from 'react-redux';\nimport NumberOfPlayers from './NumberOfPlayers';\nimport { changeNumberOfPlayers } from '../../data/action';\n\nconst mapStateToProps = ({ numberOfPlayers, min, max, tooManyPlayers }) => ({ numberOfPlayers, min, max, tooManyPlayers });\n\nconst mapDispatchToProps = dispatch => {\n\n    return {\n        handleIncrement: () => dispatch(changeNumberOfPlayers(2)),\n        handleDecrement: () => dispatch(changeNumberOfPlayers(-2)),\n    };\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NumberOfPlayers);","import React from 'react';\n\nconst RandomTeamsBtn = ({ handleCreateTeams, tooManyPlayers }) => {\n\n    return (\n\n        <button\n            className=\"btn-confirms-teams\"\n            onClick={() => handleCreateTeams()}\n            disabled={tooManyPlayers ? false : true}\n        >Draw random teams</button>\n\n    );\n};\n\nexport default RandomTeamsBtn;","import { connect } from 'react-redux';\nimport RandomTeamsBtn from './RandomTeamsBtn';\nimport { createRandomTeams } from '../../data/action';\n\nconst mapStateToProps = ({ tooManyPlayers }) => ({ tooManyPlayers });\n\nconst mapDispatchToProps = dispatch => {\n\n    return {\n        handleCreateTeams: () => dispatch(createRandomTeams())\n    };\n    \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomTeamsBtn);","import React from 'react';\n\nconst FormField = ({ \n    name, \n    label, \n    type, \n    value,\n    containerClass,\n    handleChange \n}) => {\n\n    return (\n        <div className={ containerClass }>\n\n            <label>{ label }</label>\n\n            <input\n                name={ name }\n                type={ type }\n                value={ value }\n                onChange={ handleChange }\n                required\n            />\n            \n        </div>\n    );\n\n};\n\nexport default FormField;","import React, { Component } from 'react';\nimport FormField from './FormField';\n\nclass PlayerForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        //tracking inputs into local state\n        this.state = {\n            playerName: \"\",\n            playerSkill: 0,\n            teamName1: \"\",\n            teamName2: \"\",\n        };\n\n        this.handleName = this.handleName.bind(this);\n        this.handleSkill = this.handleSkill.bind(this);\n        this.handleTeamName1 = this.handleTeamName1.bind(this);\n        this.handleTeamName2 = this.handleTeamName2.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    };\n\n    //update player name state\n    handleName = e => {\n        this.setState({\n            playerName: e.currentTarget.value\n        });\n    };\n\n    //update team1 name state\n    handleTeamName1 = e => {\n        this.setState({\n            teamName1: e.currentTarget.value\n        });\n    }\n\n    //update team2 name state\n    handleTeamName2 = e => {\n        this.setState({\n            teamName2: e.currentTarget.value\n        });\n    }\n\n    //update player skill state\n    handleSkill = e => {\n        this.setState({\n            playerSkill: e.currentTarget.value\n        });\n    };\n\n    //pass data up when form is submitted\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.handleSubmit({ ...this.state });\n    };\n\n    render() {\n\n        const { playerName, playerSkill, teamName1, teamName2 } = this.state;\n\n        const { tooManyPlayers } = this.props;\n\n        return (\n            <form\n                onSubmit={this.handleSubmit}\n                className=\"player-form-container\"\n            >\n\n                <div className=\"team-inputs\">\n\n                    <h1>Team Choices:</h1>\n\n                    <FormField\n                        label=\"Choose Team 1's name:\"\n                        name=\"team-name\"\n                        type=\"text\"\n                        handleChange={this.handleTeamName1}\n                        value={teamName1}\n                        containerClass={\"form-input\"}\n                    />\n\n                    <FormField\n                        label=\"Choose Team 2's name:\"\n                        name=\"team-name\"\n                        type=\"text\"\n                        handleChange={this.handleTeamName2}\n                        value={teamName2}\n                        containerClass={\"form-input\"}\n                    />\n\n                    <h1>Player Choices:</h1>\n\n                    <FormField\n                        name={\"player-name\"}\n                        label={\"Player name: \"}\n                        type={\"text\"}\n                        value={playerName}\n                        handleChange={this.handleName}\n                        containerClass={\"form-input\"}\n                    />\n\n                </div>\n\n                <div className=\"skill-inputs\">\n                    <p>Skill level:</p>\n                    <FormField\n                        name={\"player-skill\"}\n                        label={\"1\"}\n                        type={\"radio\"}\n                        checked={playerSkill === '1'}\n                        value={\"1\"}\n                        handleChange={this.handleSkill}\n                        containerClass={\"form-field\"}\n                    />\n\n                    <FormField\n                        name={\"player-skill\"}\n                        label={\"2\"}\n                        type={\"radio\"}\n                        checked={playerSkill === '2'}\n                        value={\"2\"}\n                        handleChange={this.handleSkill}\n                        containerClass={\"form-field\"}\n                    />\n\n                    <FormField\n                        name={\"player-skill\"}\n                        label={\"3\"}\n                        type={\"radio\"}\n                        checked={playerSkill === '3'}\n                        value={\"3\"}\n                        handleChange={this.handleSkill}\n                        containerClass={\"form-field\"}\n                    />\n                </div>\n                <button\n                    type=\"submit\"\n                    className=\"player-form-btn\"\n                    disabled={tooManyPlayers ? true : false}\n                >Add player</button>\n\n            </form>\n        );\n\n    };\n};\n\nexport default PlayerForm;","import { connect } from \"react-redux\";\nimport PlayerForm from './PlayerForm';\nimport { addPlayer } from '../../data/action';\nimport { addTeamNames } from '../../data/action';\n\n//using addPlayer function here, creates action object literal for us\n// pass in a function that accepts a value\n// pass the value along to the action creator\nconst mapDispatchToProps = dispatch => {\n\n    return {\n        handleSubmit: data => {\n            dispatch(addPlayer(data));\n            dispatch(addTeamNames(data));\n        }\n    };\n\n};\n\nconst mapStateToProps = ({ tooManyPlayers }) => {\n    return {\n        tooManyPlayers: tooManyPlayers,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerForm);","import React, { useEffect, useRef } from \"react\";\n\nconst PlayersList = ({ players, handleClick, tooManyPlayers }) => {\n\n    const divRef = useRef(null);\n\n    useEffect(() => {\n        divRef.current.scrollIntoView({ behavior: 'smooth' });\n    });\n\n    return (\n\n        <section className=\"players-list-container\">\n\n            <header className=\"players-list-header\">Playing this time:</header>\n\n            <ul className=\"players-list\">\n                {/* iterating through players array, accessing name and skill properties */}\n                {players.map((player, index) => {\n                    return (\n                        <li className=\"player-card\" key={index}>\n\n                            <p className=\"player-name\">{player.name}</p>\n                            <p className=\"player-skill\">Skill: {player.skill}</p>\n\n                            <button className=\"player-delete-btn\"\n                                onClick={() => handleClick(index)}\n                            >\n                                x\n                            </button>\n\n                        </li>\n                    )\n                })}\n            </ul>\n\n            <div ref={divRef} />\n            \n        </section>\n    );\n};\n\nexport default PlayersList;","import { connect } from 'react-redux';\nimport PlayersList from './PlayersList';\nimport { deletePlayer } from '../../data/action';\n\nconst mapStateToProps = ({ players, tooManyPlayers }) => ({ players, tooManyPlayers });\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleClick: (state, data) => dispatch(deletePlayer(state, data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayersList);","import React from 'react';\n\nconst TeamList = ({ playersTeam, teamName }) => {\n\n    return (\n        <>          \n            <ul className=\"team-list\">\n\n            <header className=\"team-header\">Team name: {teamName}</header>\n            \n                {playersTeam.map((player, index) => {\n\n                    return (\n\n                        <li\n                            className=\"team-card\"\n                            key={index}\n                        >\n                    \n                            <p className=\"name-card\">Name: {player.name}</p>\n\n                            <p className=\"skill-card\">Skill: {player.skill}</p>\n\n                        </li>\n\n                    )\n\n                })}\n\n            </ul>\n        </>\n\n    );\n\n};\n\nexport default TeamList;","import { connect } from 'react-redux';\nimport Team from './Team';\n\nconst mapStateToProps = ({ playersTeam1, teamName1 }) => {\n\n    return {\n        playersTeam: playersTeam1,\n        teamName: teamName1,\n    };\n\n};\n\n\nexport default connect(mapStateToProps)(Team);","import { connect } from 'react-redux';\nimport Team from './Team';\n\nconst mapStateToProps = ({ playersTeam2, teamName2 }) => {\n\n    return {\n        playersTeam: playersTeam2,\n        teamName: teamName2,\n    };\n\n};\n\nexport default connect(mapStateToProps)(Team);","import React from 'react';\n\nconst SkillTeamsBtn = ({ handleSkillTeams, tooManyPlayers }) => {\n\n    return (\n\n        <button\n            className=\"btn-skill-teams\"\n            onClick={() => handleSkillTeams()}\n            disabled={tooManyPlayers ? false : true}\n        >Draw fair teams</button>\n\n    );\n};\n\nexport default SkillTeamsBtn;","import { connect } from 'react-redux';\nimport SkillTeamsBtn from './SortSkillBtn';\nimport { createSkillTeams } from '../../data/action';\n\nconst mapStateToProps = ({ tooManyPlayers }) => ({ tooManyPlayers });\n\nconst mapDispatchToProps = dispatch => {\n\n    return {\n        handleSkillTeams: () => dispatch(createSkillTeams())\n    };\n    \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SkillTeamsBtn);","import React from 'react';\nimport NumberOfPlayers from '../NumberOfPlayers';\nimport RandomTeamsBtn from '../RandomTeamsBtn';\nimport PlayerForm from '../PlayerForm';\nimport PlayersList from '../PlayersList';\nimport Team1 from '../Teams/Team1';\nimport Team2 from '../Teams/Team2';\nimport SkillTeamsBtn from '../SortSkillBtn';\n\nconst Main = ({ tooManyPlayers, teamGenerated }) => {\n\n    return (\n\n        !teamGenerated ?\n            <section className=\"column-wrapper\">\n                <div className=\"row-wrapper\">\n                    <PlayerForm />\n                    <div className=\"column-wrapper\">\n                        <NumberOfPlayers />\n                        <PlayersList />\n                    </div>\n                    <RandomTeamsBtn />\n                    <SkillTeamsBtn />\n                </div>\n            </section>\n            :\n            <>\n                <section className=\"row-wrapper\">\n                    <Team1 />\n                    <Team2 />\n                </section>\n            </>\n\n    );\n\n};\n\nexport default Main;","import { connect } from 'react-redux';\nimport Main from './Main';\n\nconst mapStateToProps = ({ tooManyPlayers, teamGenerated }) => ({ tooManyPlayers, teamGenerated });\n\nexport default connect(mapStateToProps)(Main);","import React from 'react';\n\nconst ResetBtn = ({ handleClick }) => {\n\n    return (\n        <button\n            onClick={handleClick}\n            className=\"btn-reset\"\n        >Reset App</button>\n    );\n\n};\n\nexport default ResetBtn;","import { connect } from \"react-redux\";\nimport ResetBtn from './ResetBtn';\nimport { reset } from '../../data/action';\n\nconst mapDispatchToProps = dispatch => {\n\n    return {\n        handleClick: () => { \n            dispatch(reset());\n        }\n    };\n    \n};\n\nexport default connect(null, mapDispatchToProps)(ResetBtn);","import React from \"react\";\n\nconst AboutPageBtn = ({ handleClick }) => {\n\n     return (\n        <button\n            onClick={ handleClick }\n            className=\"btn-reset\"\n        >Toogle about page</button>\n    );\n\n};\n\nexport default AboutPageBtn;","import { connect } from \"react-redux\";\nimport AboutPageBtn from \"./AboutPageBtn\";\nimport { showAboutPage } from '../../data/action';\n\nconst mapDispatchToProps = dispatch => {\n\n    return {\n        handleClick: () => { \n            dispatch(showAboutPage());\n        }\n    };\n    \n};\n\nexport default connect(null, mapDispatchToProps)(AboutPageBtn);","const PlayerHeader = () => {\n    return (\n        <header className=\"player-header\">\n            Football Fever\n        </header>\n    );\n};\n\nexport default PlayerHeader;","import React from \"react\";\n\nconst AboutPage = () => {\n\n    return (\n        <section className=\"about-page\">\n            <h1>\n                How to use the app:\n            </h1>\n            <p>-Select team and player names, and player skill.</p>\n            <p>-Set how many people are playing (from 2 to 22).</p>\n            <p>-Choose whether you'd like teams to be balanced or random.</p>\n            <p>-Have a kick about.</p>\n            <p>-Do it all over again!</p>\n        </section>\n    );\n\n};\n\nexport default AboutPage;","import React from 'react';\nimport Main from '../Main';\nimport ResetBtn from '../ResetBtn'\nimport AboutPageBtn from '../AboutPageBtn'\nimport PlayerHeader from '../Headers/PlayerHeader'\nimport AboutPage from '../AboutPage/AboutPage'\n\nconst App = ({aboutPage}) => {\n  return (\n    !aboutPage ?\n    <>\n    <div className=\"row-wrapper\">\n      <AboutPageBtn/>\n      <ResetBtn />\n    </div>\n      <PlayerHeader />\n      <Main />\n    </>\n    :\n    <>\n    <AboutPageBtn />\n    <PlayerHeader />\n    <AboutPage/ >\n    </>\n  );\n}\n\nexport default App;","import { connect } from 'react-redux';\nimport App from './App';\n\nconst mapStateToProps = ({ aboutPage }) => ({ aboutPage });\n\nexport default connect(mapStateToProps, null)(App);","const initial = {\n    numberOfPlayers: 8,\n    players: [],\n    tooManyPlayers: false,\n    playersTeam1: [],\n    playersTeam2: [],\n    min: 2,\n    max: 22,\n    teamGenerated: false,\n    aboutPage: false,\n};\n\nexport default initial;","const createTeams = state => {\n    \n    let playersArray = state.players;\n\n    const shuffle = (playersArray) => playersArray.sort(() => 0.5 - Math.random());\n\n    let newArr = shuffle(playersArray);\n\n    let team1 = newArr.slice(0, (newArr.length / 2));\n    let team2 = newArr.slice((newArr.length / 2), (newArr.length));\n\n    return {\n        ...state,\n        playersTeam1: team1,\n        playersTeam2: team2,\n        players: [],\n        teamGenerated: true,\n    };\n};\n\nexport default createTeams;","const addPlayer = (state, { data }) => {\n    \n    return {\n        ...state,\n        players: [\n            ...state.players,\n            { name: data.playerName, skill: data.playerSkill }\n        ]\n    };\n\n};\n\nexport default addPlayer;","const addTeamNames = (state, { data }) => {\n    \n    return {\n        ...state,\n        teamName1: data.teamName1,\n        teamName2: data.teamName2,\n    };\n\n};\n\nexport default addTeamNames;","const changeNumberOfPlayers = (state, { value }) => {\n\n    return {\n        ...state,\n        numberOfPlayers: state.numberOfPlayers + value,\n    };\n\n};\n\nexport default changeNumberOfPlayers;","// if currentNoOfPlayers is not equal to state.numberOfPlayers then tooManyPlayers state will be changed to true\nconst checkPlayerNumbers = state => {\n\n    const currentNoOfPlayers = state.players.length;\n\n    const tooManyPlayers = currentNoOfPlayers === state.numberOfPlayers;\n\n    return {\n        ...state,\n        tooManyPlayers,\n    };\n\n};\n\nexport default checkPlayerNumbers;","const createSkillTeams = state => {\n\n    let playersArray = state.players;\n    let team1 = [];\n    let team2 = [];\n\n    let arrangeBySkill = (players) => {\n        return playersArray.sort((a, b) => a.skill - b.skill);\n    }\n\n    let sortedPlayerArray = arrangeBySkill(playersArray);\n\n    let splitPlayers = (sortedPlayerArray) => {\n\n        //using filter to select odd indexed players\n        team1 = sortedPlayerArray.filter((player, index) => {\n            return index % 2 === 1;\n        });\n\n        //using filter to select even indexed players\n        team2 = sortedPlayerArray.filter((player, index) => {\n            return index % 2 === 0;\n        });\n\n    }\n\n    splitPlayers(sortedPlayerArray);\n\n    return {\n        ...state,\n        playersTeam1: team1,\n        playersTeam2: team2,\n        players: [],\n        teamGenerated: true,\n    };\n};\n\nexport default createSkillTeams;","const deletePlayer = (state, action) => {\n  \n  //button click identifies specific player index\n  let playerToBeDeleted = action.index;\n\n  let playersArray = state.players\n\n  // filter out specific player to delete\n  playersArray = playersArray.filter((player, index) => index !== playerToBeDeleted)\n\n  return {\n    ...state,\n    players: playersArray,\n    tooManyPlayers: false,\n  }\n}\n\n  export default deletePlayer;","const showAboutPage = (state) => {\n    \n    return {\n        ...state,\n        aboutPage: \n        !state.aboutPage,\n    };\n};\n\nexport default showAboutPage;","import initial from '../initial';\nimport createRandomTeams from './createRandomTeams';\nimport addPlayer from './addPlayer';\nimport addTeamNames from './addTeamNames';\nimport changeNumberOfPlayers from './changeNumberOfPlayers';\nimport checkPlayerNumbers from './checkPlayerNumbers';\nimport createSkillTeams from './createSkillTeams';\nimport deletePlayer from './deletePlayer';\nimport showAboutPage from './showAboutPage';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"ADD_PLAYER\": return checkPlayerNumbers(addPlayer(state, action));\n        case \"SHOW_ABOUT_PAGE\": return showAboutPage(state, action);\n        case \"ADD_TEAM_NAMES\": return addTeamNames(state, action);\n        case \"CHANGE_NO_OF_PLAYERS\": return checkPlayerNumbers(changeNumberOfPlayers(state, action));\n        case \"CREATE_RANDOM_TEAMS\": return createRandomTeams(state, action);\n        case \"CREATE_SKILL_TEAMS\": return createSkillTeams(state, action);\n        case \"DELETE_PLAYER\": return deletePlayer(state, action);\n        case \"RESET\": return initial;\n        default: return state;\n    }\n};\n\nexport default reducer; ","import { createStore, compose } from \"redux\";\nimport persistState from \"redux-localstorage\";\nimport reducer from \"./reducer/reducer\";\nimport initial from \"./initial\";\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    initial,\n    composeEnhancers(persistState())\n);\n\nexport default store;\n\n\n// The Store: The store keeps track of the current state. We can subscribe to it\n// to listen for changes and we can dispatch actions to it. We can’t change the\n// state directly, only via the store.","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App from './components/App'\nimport { Provider } from 'react-redux';\nimport store from './data/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}